<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vickcle.dao.StudentDao">
    <select id="findAllStudent" resultType="Student">
  		select * from hg_student;
  	</select>
    <select id="findStudentByName" resultType="Student">
  		select * from hg_student where student_name = #{student_name};
  	</select>

    <select id="findStudentByCode" resultType="Student">
  		select * from hg_student where student_code = #{student_code};
  	</select>

    <select id="findStudentById" resultType="Student">
  		select * from hg_student where student_id = #{student_id};
  	</select>

    <select id="selectStudentInfo" resultType="Student" parameterType="com.vickcle.model.Student">
  		select * from hg_student where 1 = 1
        <if test="student_code!=null and student_code!= 'empty'">
            and student_code = #{student_code}
        </if>
        <if test="student_name!=null and student_name!= 'empty'">
            and student_name = #{student_name}
        </if>

  	</select>

    <insert id="insertStudent">
        INSERT INTO hg_student (
            student_id,
            student_code,
            student_name,
            student_pwd,
            student_tel,
            student_email,
            student_address,
            class_id,
            create_by,
            creation_date,
            last_update_by,
            last_update_date
        )
        VALUES
            (null,#{student_code},#{student_name},#{student_pwd},#{student_tel},#{student_email},#{student_address},#{class_id},#{create_by},NOW(),null,null);
    </insert>

    <update id="updateStudentById">
        update hg_student set
         student_code = #{student_code},
         student_name = #{student_name},
         student_tel = #{student_tel},
         student_email = #{student_email},
         student_address = #{student_address},
         class_id = #{class_id},
         last_update_by = #{last_update_by},
         last_update_date = NOW()
         where student_id = #{student_id};
    </update>

    <delete id="deleteStudentById">
        delete from hg_student where student_id = #{student_id};
    </delete>
</mapper>